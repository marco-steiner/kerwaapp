*, ::after, ::before {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}
body, html {
  margin: 0; padding: 0;
  overscroll-behavior-y: none;
  -ms-overflow-style: none;
  overflow: -moz-scrollbars-none;
  height: 100%;
  -webkit-user-select: none;
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
  font-size: 16px;
}
::-webkit-scrollbar, ::-webkit-scrollbar-thumb, ::-webkit-scrollbar-track {
  display: none!important;
  width: 0!important;
  height: 0!important;
  background: transparent!important;
  -webkit-appearance: none;
}

body {
  font-family: -apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif;
}

img {
  max-width: 100%;
}

.nav {
  display: none;
}
nav[role="navigation"] {
  text-align: center;
}
nav[role="navigation"] a {
  display: inline-block;
  margin: 1.0em 0.75em 2.0em;
}

.layout {
  width: 100%;
  min-height: 100%;
  position: relative;
  /*overflow: hidden;*/
}
.header {
  display: flex;
  position: fixed;
  top: 0;
  justify-content: space-between;
  height: 70px;
  width: 100%;
  background: #FFFFFF;
  z-index: 1000;
}
.logo {
  margin: 3px auto 0 auto;
}
.nav__link {
  margin-left: 20px;
  display: inline-block;
}
.post-list {
  list-style: none;
  padding-left: 0;
}
.post-list li {
  padding: 0.3em 0;
}
/*
@media only screen and (orientation:landscape) {
  body {
    width: 100vh;
    transform: rotate(-90deg);
  }
}*/

input, select {
  font-size: 100%;
}
.container {
  padding: 0 15px;
}
.content {
  width: 100%;
  max-width: 600px;
  position: absolute;
  top: 80px;
  padding-bottom: 50px;
}
.scrollContent {
  position: relative;
  width: 100%;
  background: #fff;  
}
.fixedContent {
  position: fixed;
  width: 100%;
  background: #fff;  
  z-index: 1;
}
.pull-down-container {
}
.fixedPullContainer {
  top: 150px;
}


ul {
  list-style: none; /* Remove default bullets */
  padding-left: 20px;
}

ul li::before {
  content: "\2022";
  color: $primaryColor;
  font-weight: bold;
  display: inline-block;
  width: 1em;
  margin-left: -1em;
}



/* Transition
 -----------------------------*/
 @for $i from 1 through 5 {
    $enter-delay: 200ms;
    $leave-delay: 200ms;
    
    .slide-left-enter-active, .slide-right-enter-active {
      overflow: hidden;
      transition: transform $enter-delay cubic-bezier(0.4, 0.1, 0.7, 0.95);
    }
    
    .enter-#{$i} {
      transition: 300ms cubic-bezier(0.1, 0.7, 0.6, 0.9);
      transition-property: opacity, transform;
      transition-delay: #{120ms * $i + $enter-delay};
    }
    
    .slide-right-enter {
      transform: translateX(-100%);
      
      .enter-#{$i} {
        opacity: 0;
        transform: translateX(50px);
      }
    }
    
    .slide-left-enter {
      transform: translateX(100%);
      
      .enter-#{$i} {
        opacity: 0;
        transform: translateX(50px);
      }
    }

    .fade-in-up-enter {        
        .enter-#{$i} {
          opacity: 0;
          transform: translateX(50px);
        }
    }
    
    .slide-right-leave-active {
      transition: transform $leave-delay cubic-bezier(0.4, 0.1, 0.7, 0.95);
      transform: translateX(50%);
    }
    
    .slide-left-leave-active {
      transition: transform $leave-delay cubic-bezier(0.4, 0.1, 0.7, 0.95);
      transform: translateX(-50%);
    }
  }
  
  
  
  
  /* make keyframes that tell the start state and the end state of our object */
  /*@-webkit-keyframes fadeIn { from { opacity:0; } to { opacity:1; } }
  @-moz-keyframes fadeIn { from { opacity:0; } to { opacity:1; } }*/
  
  @keyframes fadeIn { 
    from { opacity:0; transform: translateX(50px); }
    to { opacity:1; transform: translateX(0px); } 
  }
  
  .fade-in {
    opacity:0;  /* make things invisible upon start */
    -webkit-animation:fadeIn ease-in 1;  /* call our keyframe named fadeIn, use animattion ease-in and repeat it only 1 time */
    -moz-animation:fadeIn ease-in 1;
    animation:fadeIn ease-in 1;
  
    -webkit-animation-fill-mode:forwards;  /* this makes sure that after animation is done we remain at the last keyframe value (opacity: 1)*/
    -moz-animation-fill-mode:forwards;
    animation-fill-mode:forwards;
  
    -webkit-animation-duration:300ms;
    -moz-animation-duration:300ms;
    animation-duration:300ms;
  }
  
  .enter {
    opacity:0;  /* make things invisible upon start */
    -webkit-animation:fadeIn ease-in 1;  /* call our keyframe named fadeIn, use animattion ease-in and repeat it only 1 time */
    -moz-animation:fadeIn ease-in 1;
    animation:fadeIn ease-in 1;
  
    -webkit-animation-fill-mode:forwards;  /* this makes sure that after animation is done we remain at the last keyframe value (opacity: 1)*/
    -moz-animation-fill-mode:forwards;
    animation-fill-mode:forwards;
  
    -webkit-animation-duration:300ms;
    -moz-animation-duration:300ms;
    animation-duration:300ms;
  }
  
  .fade-in.one {
    -webkit-animation-delay: 0.7s;
    -moz-animation-delay: 0.7s;
    animation-delay: 0.7s;
  }



.footerNav {
  position: fixed;
  bottom: 0;
  height: 50px;
  width: 100%;
  background: $primaryColor;
  border-radius: 30px 30px 0 0;
  display: flex;
  justify-content: space-evenly;
  align-items: center;
  .nav__link {
    display: flex;
    padding: 11px;
    margin: 0;
  }
  .active--exact svg path {
    stroke: black;
  }
}